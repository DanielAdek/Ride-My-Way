{
    "swagger": "2.0",
    "info": {
      "description": "Ride my way connect drivers and passengers together so that a passenger can get a ride through the Ride-My-Way app.",
      "version": "1.0.0",
      "title": "Ride-My-Way",
      "contact": {
        "email": "ridemyway.you@gmail.com"
      }
    },
    "host": "https://ridemyway-danieladek.herokuapp.com",
    "basePath": "/api/v1/",
    "tags": [
      {
        "name": "rides",
        "description": "Rides that can be booked"
      }
    ],
    "schemes": [
      "https",
      "http"
    ],
    "paths": {
      "/users/rides": {
        "post": {
          "tags": [
            "rides"
          ],
          "summary": "Add a new ride detail",
          "description": "",
          "operationId": "addRide",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Ride object that needs to be added",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Ride"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "New ride offer created"
            },
            "400": {
              "description": {
                "status": "failed",
                "message": "You cannot create a ride that has the same date and time"
              }
            },
            "401": {
              "description": "Invalid input"
            },
            "403": {
              "description": "Authentication Failed"
            },
            "422": {
              "description" : "Input fields cannot be empty"
            },
            "500": {
              "description" : "Internal error, Timeout"
            }
          }
        },
        "get": {
          "tags": [
            "rides"
          ],
          "summary": "Retrieves all existing ride offers",
          "description": "",
          "operationId": "getRides",
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Retrieved all ride offers"
            }
          }
        }
      },
      "/rides/{rideId}": {
        "get": {
          "tags": [
            "rides"
          ],
          "summary": "Find ride by ID",
          "description": "Returns a single ride detail",
          "operationId": "getRifdeById",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "rideId",
              "in": "path",
              "description": "ID of ride to retrieve",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Ride details retrieved",
              "schema": {
                "$ref": "#/definitions/Ride"
              }
            },
            "404": {
              "description": "Ride not found"
            }
          }
        }
      },
      "/rides": {
        "get": {
          "tags": [
            "rides"
          ],
          "summary": "Get all ride",
          "description": "Returns all rides details",
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Ride details retrieved",
              "schema": {
                "$ref": "#/definitions/Rides"
              }
            },
            "404": {
              "description": "Rides not found"
            }
          }
        }
      },
      "/user/rides": {
        "get": {
          "tags": [
            "rides"
          ],
          "summary": "Get one user rides",
          "description": "Returns a user rides",
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Rides details retrieved",
              "schema": {
                "$ref": "#/definitions/Rides"
              }
            },
            "401": {
              "description": "Authentication Failed"
            },
            "403": {
              "description": "Authentication Failed, Signup or Login"
            },
            "404": {
              "description": "Rides not found"
            }
          }
        }
      },
      "/user/passengers/requests": {
        "get": {
          "tags": [
            "requests"
          ],
          "summary": "Get all request to a ride",
          "description": "Returns all requestss to a ride",
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Requests details retrieved",
              "schema": {
                "$ref": "#/definitions/Requests"
              }
            },
            "401": {
              "description": "Authentication Failed"
            },
            "403": {
              "description": "Authentication Failed, Signup or Login"
            },
            "404": {
              "description": "Requests not found"
            }
          }
        }
      },
      "/user/requests": {
        "get": {
          "tags": [
            "requests"
          ],
          "summary": "Get one user request",
          "description": "Returns a user requests",
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Requests details retrieved",
              "schema": {
                "$ref": "#/definitions/Requests"
              }
            },
            "401": {
              "description": "Authentication Failed"
            },
            "403": {
              "description": "Authentication Failed, Signup or Login"
            },
            "404": {
              "description": "Requests not found"
            }
          }
        }
      },
      "/users/rides/{rideId}/requests": {
        "get": {
          "tags": [
            "requests"
          ],
          "summary": "Find requests by ID",
          "description": "Returns all requests details to a single ride",
          "operationId": "getRequestsByRideId",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "rideId",
              "in": "path",
              "description": "ID of ride to retrieve requests",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Request details retrieved",
              "schema": {
                "$ref": "#/definitions/Requests"
              }
            },
            "401":{
              "description": "Authentication Failed"
            },
            "403":{
              "description":"Authentication Failed, Signup or Login"
            },
            "404": {
              "description": "Requests not found"
            }
          }
        }
      },
      "/rides/{rideId}/request": {
        "post": {
          "tags": [
            "requests"
          ],
          "summary": "New request on ride",
          "description": "Returns a single ride detail",
          "operationId": "addRequestByrideId",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "rideId",
              "in": "path",
              "description": "request a ride by ID",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "201": {
              "description": "Ride details retrieved",
              "schema": {
                "$ref": "#/definitions/Request"
              }
            },
            "403": {
              "description": "Authenticaton Failed"
            },
            "404": {
              "description": "No ride found"
            },
            "401": {
              "description": "Cannot request one's ride"
            }
          }
        }
      },
      "/auth/signup": {
        "post": {
          "tags": [
            "users"
          ],
          "summary": "New user account",
          "description": "Returns a new user",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "description": "create new user",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "201": {
              "description": "new user account",
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "400": {
              "description": "Username/Email already exist"
            },
            "500": {
              "description": "server error"
            }
          }
        }
      },
      "/auth/login": {
        "post": {
          "tags": [
            "users"
          ],
          "summary": "login user account",
          "description": "login user into account",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "description": "login a user",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "201": {
              "description": "user login into account",
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "400": {
              "description": "Email/password invalid"
            },
            "500": {
              "description": "server error"
            }
          }
        }
      },
      "/user/forget-password": {
        "put": {
          "tags": [
            "users"
          ],
          "summary": "Forgot password access link",
          "description": "Change user password",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "description": "Change a user password",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "A Reset Token Has Been Sent To Your Mail Account",
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "400":{
              "description": "This Email is either incorrect or not yet registered"
            },
            "422": {
              "description": "Email must be in email format, like example@mail.com"
            },
            "500": {
              "description": "server error"
            }
          }
        }
      },
      "/user/reset-password": {
        "put": {
          "tags": [
            "users"
          ],
          "summary": "Reset user password",
          "description": "Create new user password",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "description": "Create new user password",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "New password is successfully created",
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "400":{
              "description": "Token incorrect, please copy token from your mail"
            },
            "500": {
              "description": "Internal error"
            }
          }
        }
      },
      "/users/rides/{rideId}/requests/{requestId}": {
        "put": {
          "tags": [
            "requests"
          ],
          "summary": "Accept or Reject a request",
          "description": "accept or reject a user request to a ride offer",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "description": "ID modify request information",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "New password is successfully created",
              "schema": {
                "$ref": "#/definitions/Request"
              }
            },
            "400":{
              "description": "Cannot take action twice"
            },
            "401":{
              "description": "Authentication Failed"
            },
            "403":{
              "description":"Authentication Failed, Signup or Login"
            },
            "500": {
              "description": "Internal error"
            }
          }
        }
      }
    },
    "definitions": {
      "User": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "passwordResetToken": {
            "type": "string"
          },
          "notification": {
            "type": "string"
          }
        }
      },
      "Ride": {
        "type": "object",
        "properties": {
          "rideId": {
            "type": "integer"
          },
          "userId": {
            "type": "integer"
          },
          "driver": {
            "type": "string"
          },
          "departure": {
            "type": "string"
          },
          "destination": {
            "type": "string"
          },
          "time": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "seats": {
            "type": "integer"
          },
          "cost": {
            "type": "numeric"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "Request": {
        "type": "object",
        "properties": {
          "requestId" : {
            "type": "integer"
          },
          "userId": {
            "type": "integer"
          },
          "rideId": {
            "type": "integer"
          },
          "passenger": {
            "type": "string"
          },
          "driver": {
            "type": "string"
          },
          "departure": {
            "type": "string"
          },
          "destination": {
            "type": "string"
          },
          "time": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "seats": {
            "type": "integer"
          },
          "cost": {
            "type": "numeric"
          },
          "message": {
            "type": "string"
          },
          "action": {
            "type": "string"
          }
        }
      }
    }
  }